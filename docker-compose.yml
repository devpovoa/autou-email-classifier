services:
  # Aplicação principal
  app:
    build:
      context: .
      target: production
    ports:
      - "8000:8000"
    environment:
      - PROVIDER=OpenAI
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOG_LEVEL=INFO
      - PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Serviço para desenvolvimento
  app-dev:
    build:
      context: .
      target: development
    ports:
      - "8001:8000"
    environment:
      - PROVIDER=OpenAI
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOG_LEVEL=DEBUG
      - PORT=8000
    volumes:
      - .:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  # Serviço para testes
  test:
    build:
      context: .
      target: development
    environment:
      - PROVIDER=OpenAI
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOG_LEVEL=ERROR
    volumes:
      - .:/app
      - ./coverage:/app/coverage
    user: "1000:1000"
    command: >
      sh -c "
        mkdir -p /tmp/coverage &&
        export COVERAGE_FILE=/tmp/coverage/.coverage &&
        rm -f /tmp/coverage/.coverage* &&
        python -m pytest --cov=app --cov-report=term-missing --cov-report=html:/app/coverage --cov-report=xml:/app/coverage/coverage.xml -v || 
        python -m pytest -v
      "
    profiles:
      - test

  # Serviço para testes de performance
  test-performance:
    build:
      context: .
      target: development
    environment:
      - PROVIDER=OpenAI
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOG_LEVEL=ERROR
    volumes:
      - .:/app
    command: python -m pytest tests/test_performance.py -v --tb=short
    profiles:
      - test

  # Serviço para linting e formatação
  lint:
    build:
      context: .
      target: development
    volumes:
      - .:/app
    working_dir: /app
    command: |
      sh -c "
        pip install --user black==24.8.0 isort==5.13.2 flake8==7.1.1 &&
        PATH=/home/app/.local/bin:/usr/local/bin:/usr/bin:/bin &&
        echo '=== Running Black ===' &&
        /home/app/.local/bin/black --check app/ tests/ main.py &&
        echo '=== Running isort ===' &&
        /home/app/.local/bin/isort --profile black --check-only app/ tests/ main.py &&
        echo '=== Running flake8 ===' &&
        /home/app/.local/bin/flake8 app/ tests/ main.py
      "
    profiles:
      - lint
