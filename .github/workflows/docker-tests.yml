name: Docker Tests

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'requirements.txt'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile' 
      - 'docker-compose.yml'
      - 'requirements.txt'

jobs:
  docker-build-test:
    name: Docker Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test Docker build (development)
        run: |
          docker build --target development -t autou-classifier:dev .

      - name: Test Docker build (production)
        run: |
          docker build --target production -t autou-classifier:prod .

      - name: Test application startup
        run: |
          # Start the application in background
          docker run -d --name test-app -p 8000:8000 autou-classifier:prod
          
          # Wait for application to start
          sleep 10
          
          # Test health endpoint
          curl -f http://localhost:8000/health || exit 1
          
          # Stop container
          docker stop test-app
          docker rm test-app

      - name: Run tests in Docker
        run: |
          docker run --rm autou-classifier:dev

  docker-compose-test:
    name: Docker Compose Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test docker-compose build
        run: |
          docker compose build app
          docker compose build app-dev

      - name: Run tests with docker-compose
        run: |
          docker compose --profile test run --rm test

      - name: Test application with docker-compose
        run: |
          # Start application
          docker compose up -d app
          
          # Wait for startup
          sleep 15
          
          # Test health endpoint
          curl -f http://localhost:8000/health || exit 1
          
          # Test classification endpoint
          curl -X POST http://localhost:8000/classify \
               -F "text=Sistema fora do ar, preciso de ajuda" \
               -F "tone=neutro" \
               | grep -q "category" || exit 1
          
          # Cleanup
          docker compose down

  multi-platform-build:
    name: Multi-platform Build Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test multi-platform build
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          platforms: linux/amd64,linux/arm64
          push: false
          tags: autou-classifier:multi-platform
